package com.tzh.java.design.adapter

/**
 * adapter 模式
 *  1. 将目标类和适配者类解耦,通过引入一个适配器类来重用现有的适配者类,无需修改原有结构
 *  2. 增加了类的透明性和复用性,将具体的业务实现过程封装在适配者类中,对于客户端类而言是透明的,
 *   而且提高了适配者的复用性,同一个适配者类可以在多个不同的系统中复用
 *  3. 灵活性和扩展性都非常好, 完全符合开闭原则
 *
 *
 *  使用场景 : 1. 系统需要使用一些现有的类,而这些类的接口不符合系统需要,甚至没有这些类的源代码
 *            2. 想创建一个可以重复使用的类,用于与一些彼此之间没有太大关联的一些类,包括一些可能在将来引进的类一起工作
 */
interface IWindowShow {

    fun getItemView(): String

    fun getItemCount(): Int

    fun bindView(position: Int)

}