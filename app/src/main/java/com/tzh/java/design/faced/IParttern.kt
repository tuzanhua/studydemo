package com.tzh.java.design.faced

/**
 * 外观模式:
 *  优点 :
 *     1. 他对客户端屏蔽了子系统的组件,减少了科幻所需要处理的对象数目,并使得子系统使用起来更容易
 *      通过引入外观模式,客户端代码将变得很简单,与之关联的对象也很少
 *     2. 它实现了子系统与可魂断之间的松耦合关系,这使得子系统的变化不会影响到调用到它的客户端,只需要调整外观类即可
 *     3. 一个子系统的修改对其它子系统没有任何影响,而且子系统内部变化也不会影响到外观对象
 *   缺点:
 *     1.不能很好的限制客户端直接使用子类系统,如果对客户端访问子类系统做太多的限制规则 减少了可变性和灵活性
 *     2.如果涉及不当,当增加新的子系统可能需要修改外观类的源代码,违背了开闭原则
 */
interface IParttern {

    fun subOne()
    fun subTwo()
}